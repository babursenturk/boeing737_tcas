;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME:   LED7SEG_1.inc
;;  Version: 1.0, Updated on 2006/06/14 at 07:47:37
;;  Generated by PSoC Designer ver 4.4  b1884 : 14 Jan, 2007
;;
;;  DESCRIPTION:  Assembler declarations for the GLCD user module interface
;;                for the 22/24/25/26/27xxx PSoC family of devices.
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress MicroSystems 2000-2004. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

include "m8c.inc"

;;----------------------------------------------------------
;;  The Digit Drive Pins variable is formatted as follows;
;;     VALUE[15:12]  => First digit location
;;     VALUE[11:8]   => Digit count
;;     VALUE[7:0]    => Digit drive mask 
;;----------------------------------------------------------

LED7SEG_1_SegmentPort:    equ   0x5
LED7SEG_1_DigitPort:      equ   0x0
LED7SEG_1_DigitMask:      equ   (0x8ff & 0x00FF )


LED7SEG_1_DigitPortDR:    equ   PRT0DR
LED7SEG_1_DigitPortDM0:   equ   PRT0DM0
LED7SEG_1_DigitPortDM1:   equ   PRT0DM1
LED7SEG_1_DigitPortDM2:   equ   PRT0DM2

LED7SEG_1_SegmentPortDR:  equ   PRT5DR
LED7SEG_1_SegmentPortDM0: equ   PRT5DM0
LED7SEG_1_SegmentPortDM1: equ   PRT5DM1
LED7SEG_1_SegmentPortDM2: equ   PRT5DM2


LED7SEG_1_DigitCnt:       equ   ((0x8ff>>8)&0x0F)
LED7SEG_1_DigitDimCnt:    equ   (LED7SEG_1_DigitCnt<<1)
LED7SEG_1_DigitDrive:     equ   1
LED7SEG_1_SegmentDrive:   equ   1
LED7SEG_1_FirstDigit:     equ   ((0x8ff>>12)&0x0F)


LED7SEG_1_TIMER_PRESENT:  equ   1


IF(1)                      // Active High Digit Drive
LED7SEG_1_DigitOff:       equ   ~LED7SEG_1_DigitMask
ELSE                                   // Active Low Digit Drive
LED7SEG_1_DigitOff:       equ   LED7SEG_1_DigitMask
ENDIF

// Initial segment pattern
LED7SEG_1_SegmentInit:    equ   0x00

LED7SEG_1_DigitShadow:    equ  Port_0_Data_SHADE

LED7SEG_1_ScanFlag:       equ   0x80      // If set, scan
LED7SEG_1_DimEnable:      equ   0x40      // Dim Enable  
LED7SEG_1_DimFlag:        equ   0x20      // If set, Blanking 
LED7SEG_1_DimNow:         equ   0x60      // If set, Blank this sequence

LED7SEG_1_CntMask:        equ   0x0F      // Digit count mask


LED7SEG_1_Dig1Mask:    equ   (0x01<<(LED7SEG_1_FirstDigit+0))
LED7SEG_1_Dig2Mask:    equ   (0x01<<(LED7SEG_1_FirstDigit+1))
LED7SEG_1_Dig3Mask:    equ   (0x01<<(LED7SEG_1_FirstDigit+2))
LED7SEG_1_Dig4Mask:    equ   (0x01<<(LED7SEG_1_FirstDigit+3))
LED7SEG_1_Dig5Mask:    equ   (0x01<<(LED7SEG_1_FirstDigit+4))
LED7SEG_1_Dig6Mask:    equ   (0x01<<(LED7SEG_1_FirstDigit+5))
LED7SEG_1_Dig7Mask:    equ   (0x01<<(LED7SEG_1_FirstDigit+6))
LED7SEG_1_Dig8Mask:    equ   (0x01<<(LED7SEG_1_FirstDigit+7))


;------------------------------------------------------
;  The following is valid only if timer is present.
;------------------------------------------------------
IF (LED7SEG_1_TIMER_PRESENT)
LED7SEG_1_CONTROL_REG_START_BIT:           equ 0x01    ; Control register start bit
LED7SEG_1_INT_REG:                         equ 0x0e1
LED7SEG_1_INT_MASK:                        equ 0x04
LED7SEG_1_CONTROL_REG:                     equ 0x2b   ; Control register
 
ENDIF

;------------------------------------------------------
;  Register Address Constants for  LED7SEG_1
;------------------------------------------------------

;------------------------------------------------------
;  Macros for  LED7SEG_1
;------------------------------------------------------





; end of file LED7SEG_1.inc
